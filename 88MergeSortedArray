class Solution(object):
    def merge(self, nums1, m, nums2, n):
        # # 1. Remove zeros at the end of nums1
        # while len(nums1) > m and nums1[-1] == 0:
        #     nums1.pop()

        # i, j = 0, 0
        # while i < len(nums1) and j < n:
        #     # 2. Insert values from nums2 into nums1 at correct positions
        #     if nums1[i] >= nums2[j]:
        #         nums1.insert(i, nums2[j])
        #         j += 1
        #     i += 1

        # # 3. Append any remaining values in nums2 to nums1
        # while j < n:
        #     nums1.append(nums2[j])
        #     j += 1

        # return nums1

        last = m + n - 1

        while m > 0 and n > 0:
            if nums1[m - 1] > nums2[n - 1]:
                nums1[last] = nums1[m - 1]
                m -= 1
            else:
                nums1[last] = nums2[n - 1]
                n -= 1

            last -= 1

        while n > 0:
            nums1[last] = nums2[n]
            last -= 1
            n -= 1

        return nums1


if __name__ == "__main__":
    number = Solution()
    print(number.merge([-1, -1, 0, 0, 0, 0], 4, [-1, 0], 2))
